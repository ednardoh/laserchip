unit uConsultaClientes;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uModeloCad, Data.DB, Datasnap.DBClient,
  System.ImageList, Vcl.ImgList, Vcl.Buttons, Vcl.Grids, Vcl.DBGrids,
  Vcl.ExtCtrls, uClsCliente, uDatamodulo;

type
  TfrmConsultaClientes = class(TfrmModeloCad)
    TB_ConsultaID: TIntegerField;
    TB_ConsultaCpfCnpj: TStringField;
    TB_ConsultaNome: TStringField;
    TB_ConsultaCEP: TStringField;
    TB_ConsultaLogradouro: TStringField;
    TB_ConsultaNumero: TStringField;
    TB_ConsultaComplemento: TStringField;
    TB_ConsultaBairro: TStringField;
    TB_ConsultaCidade: TStringField;
    TB_ConsultaIbge_cidade: TStringField;
    TB_ConsultaSigla_uf: TStringField;
    TB_ConsultaIbge_uf: TStringField;
    procedure btn_SairClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure FormShow(Sender: TObject);
    procedure btn_IncluirClick(Sender: TObject);
    procedure btn_AlterarClick(Sender: TObject);
    procedure btn_TodosClick(Sender: TObject);
    procedure btn_FiltrarClick(Sender: TObject);
    procedure btn_ExcluirClick(Sender: TObject);
    procedure btn_ConsultarClick(Sender: TObject);
  private
    { Private declarations }
    Clientes: TClientes;
    procedure LeTodosRegistros;
  public
    { Public declarations }
  end;

var
  frmConsultaClientes: TfrmConsultaClientes;

implementation

{$R *.dfm}

uses uCadClientes;

procedure TfrmConsultaClientes.btn_AlterarClick(Sender: TObject);
begin
  inherited;
  Application.CreateForm(TfrmCadClientes,frmCadClientes);
  frmCadClientes.LStatus := '[Alterando]';
  frmCadClientes.ShowModal;
end;

procedure TfrmConsultaClientes.btn_ConsultarClick(Sender: TObject);
begin
  inherited;
  if TB_Consulta.RecordCount = 0 then
  begin
    Application.MessageBox('Não há dados para Consultar.!','Aviso',mb_Ok+mb_IconExclamation);
    exit;
  end
  else
  begin

  end;
end;

procedure TfrmConsultaClientes.btn_ExcluirClick(Sender: TObject);
begin
  inherited;
  if TB_Consulta.RecordCount = 0 then
  begin
    Application.MessageBox('Não há dados para ser excluido.!','Aviso',mb_Ok+mb_IconExclamation);
    exit;
  end
  else
  begin
    if Application.messageBox('Deseja Realmente Apagar Esse Cliente?',
      'Confirmação',mb_YesNo+mb_IconInformation+mb_DefButton2) = IDYES then
    begin
      Clientes:=TClientes.create;
      Clientes.SetID(TB_ConsultaID.AsInteger);
      Clientes.ExcluiDados;
      Clientes.Free;
      LeTodosRegistros;
    end;
  end;
end;

procedure TfrmConsultaClientes.btn_FiltrarClick(Sender: TObject);
begin
  inherited;
  Application.CreateForm(TfrmCadClientes,frmCadClientes);
  frmCadClientes.LStatus := '[Filtrando]';
  frmCadClientes.ShowModal;
end;

procedure TfrmConsultaClientes.btn_IncluirClick(Sender: TObject);
begin
  inherited;
  Application.CreateForm(TfrmCadClientes,frmCadClientes);
  frmCadClientes.LStatus := '[Incluindo]';
  frmCadClientes.ShowModal;
end;

procedure TfrmConsultaClientes.btn_SairClick(Sender: TObject);
begin
  inherited;
  close;
end;

procedure TfrmConsultaClientes.btn_TodosClick(Sender: TObject);
begin
  inherited;
  LeTodosRegistros;
end;

procedure TfrmConsultaClientes.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  inherited;
  TB_Consulta.Close;
  Action := cafree;
end;

procedure TfrmConsultaClientes.FormCloseQuery(Sender: TObject;
  var CanClose: Boolean);
begin
  inherited;
  if CanClose then
    frmConsultaClientes := NIL;
end;

procedure TfrmConsultaClientes.FormShow(Sender: TObject);
begin
  inherited;
  TB_Consulta.CreateDataSet;
end;

procedure TfrmConsultaClientes.LeTodosRegistros;
begin
  Clientes:=TClientes.create;
  Clientes.ConsultaClientesGeral('TB_Clientes');
  Clientes.Free;

  TB_Consulta.EmptyDataSet;

  frmDatamodulo.dsClientes.DataSet.First;
  while not frmDatamodulo.dsClientes.DataSet.eof  do
  begin
    TB_Consulta.Insert;
    TB_ConsultaID.AsInteger           :=  frmDatamodulo.dsClientes.DataSet.FieldByName('ID').AsInteger;
    TB_ConsultaCpfCnpj.AsString       :=  frmDatamodulo.dsClientes.DataSet.FieldByName('CpfCnpj').AsString;
    TB_ConsultaNome.AsString          :=  frmDatamodulo.dsClientes.DataSet.FieldByName('Nome').AsString;
    TB_ConsultaCEP.AsString           :=  frmDatamodulo.dsClientes.DataSet.FieldByName('Cep').AsString;
    TB_ConsultaLogradouro.AsString    :=  frmDatamodulo.dsClientes.DataSet.FieldByName('Logradouro').AsString;
    TB_ConsultaNumero.AsString        :=  frmDatamodulo.dsClientes.DataSet.FieldByName('Numero').AsString;
    TB_ConsultaComplemento.AsString   :=  frmDatamodulo.dsClientes.DataSet.FieldByName('Complemento').AsString;
    TB_ConsultaBairro.AsString        :=  frmDatamodulo.dsClientes.DataSet.FieldByName('Bairro').AsString;
    TB_ConsultaCidade.AsString        :=  frmDatamodulo.dsClientes.DataSet.FieldByName('Cidade').AsString;
    TB_ConsultaSigla_uf.AsString      :=  frmDatamodulo.dsClientes.DataSet.FieldByName('Ibge_cidade').AsString;
    TB_ConsultaIbge_cidade.AsString   :=  frmDatamodulo.dsClientes.DataSet.FieldByName('Sigla_uf').AsString;
    TB_ConsultaIbge_uf.AsString       :=  frmDatamodulo.dsClientes.DataSet.FieldByName('Ibge_uf').AsString;
    TB_Consulta.Post;
    frmDatamodulo.dsClientes.DataSet.next;
  end;
end;

end.
